<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo之常见的问题及小技巧Tips</title>
      <link href="/2022/05/13/Hexo-tips/"/>
      <url>/2022/05/13/Hexo-tips/</url>
      
        <content type="html"><![CDATA[<h2 id="⛄提高GitHub-访问速度"><a href="#⛄提高GitHub-访问速度" class="headerlink" title="⛄提高GitHub 访问速度"></a>⛄提高GitHub 访问速度</h2><p>将<code>Hexo</code>项目托管在<code>GitHub</code>数据仓库中，面临的问题通常就是<code>GitHub</code>访问速度比较慢。本人通过搜索资料、不断尝试，发现通过修改 <code>hosts</code> 文件可以进行加速，访问速度得到了有效的提高，亲测有效。手动把<code>cdn</code>和<code>ip</code>地址绑定，具体的步骤为：</p><p>第一步：获取 <code>GitHub</code> 的 global.ssl.fastly 地址</p><p>访问入口：<a href="https://ipaddress.com/website/github.global.ssl.fastly.net#ipinfo">点击进入</a></p><p>获得<code>IP Address</code>：<code>199.232.69.194</code></p><p>第二步：获取 <code>github.com</code> 的地址</p><p>访问入口：<a href="https://ipaddress.com/website/github.com#ipinfo">点击进入</a></p><p>获得<code>IP Address</code>：<code>140.82.113.4</code></p><p>第三步：修改 <code>hosts</code> 文件映射上面查找到的 <code>IP</code></p><p>①首先，针对<code>windows</code>系统，修改<code>C:\Windows\System32\drivers\etc\hosts</code>文件的权限，指定可写入：右击-&gt;<code>hosts</code>-&gt;属性-&gt;安全-&gt;编辑-&gt;点击Users-&gt;在Users的权限”写入“后面打勾，点击确定。</p><p>②然后，右击-&gt;<code>hosts</code>-&gt;打开方式-&gt;选定记事本（或者Notepad++、EmEditor工具）-&gt;在末尾处添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">140.82.113.4 github.com</span><br></pre></td></tr></table></figure><h2 id="⛄Hexo常见问题"><a href="#⛄Hexo常见问题" class="headerlink" title="⛄Hexo常见问题"></a>⛄Hexo常见问题</h2><h3 id="👀问题一，hexo命令运行出错"><a href="#👀问题一，hexo命令运行出错" class="headerlink" title="👀问题一，hexo命令运行出错"></a>👀问题一，hexo命令运行出错</h3><p><strong>①问题描述</strong>：运行Hexo报错hexo : 无法加载文件hexo.ps1，因为在此系统上禁止运行脚本</p><p>使用如下命令安装 <code>Hexo</code>成功：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>运行<code>hexo -v、hexo clean、hexo g、hexo s、hexo d</code>会出现错误：</p><figure class="highlight plaintext"><figcaption><span>bash</span></figcaption><table><tr><td class="code"><pre><span class="line">PS C:\Users\Desktop\heartlovelife&gt; hexo s</span><br><span class="line">hexo : 无法加载文件 C:\Users\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID</span><br><span class="line">=135170 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:1 字符: 1</span><br><span class="line">+ hexo s</span><br><span class="line">+ ~~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class="line">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure><p><strong>②解决方案</strong>：针对<code>windows</code>系统，设置-&gt;隐私和安全性-&gt;开发者选项-&gt;允许本地<code>PowerShell</code>脚本在为签名的情况下运行。</p><h3 id="👀问题二，-hexo-init初始化失败"><a href="#👀问题二，-hexo-init初始化失败" class="headerlink" title="👀问题二， hexo init初始化失败"></a>👀问题二， <code>hexo init</code>初始化失败</h3><p><strong>①问题描述</strong>：<code>WARN Failed to install dependencies. Please run ‘npm install’ manually!</code></p><p><strong>②解决方案</strong>：如果我们输入命令<code>npm install</code>还是会出现错误，这时我们需要修改<code>npm</code>的镜像：</p><figure class="highlight plaintext"><figcaption><span>bash</span></figcaption><table><tr><td class="code"><pre><span class="line">npm -v</span><br><span class="line"># 修改镜像</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"># 初始化</span><br><span class="line">hexo init</span><br><span class="line"># 利用cnpm执行cnpm install</span><br><span class="line">cnpm install </span><br></pre></td></tr></table></figure><h3 id="👀问题三，hexo-d部署失败"><a href="#👀问题三，hexo-d部署失败" class="headerlink" title="👀问题三，hexo d部署失败"></a>👀问题三，<code>hexo d</code>部署失败</h3><p><strong>①问题描述</strong>：<code>fatal: unable to auto-detect email address....</code></p><figure class="highlight plaintext"><figcaption><span>bash</span></figcaption><table><tr><td class="code"><pre><span class="line">fatal: unable to auto-detect email address</span><br><span class="line">error:src refspec HEAD does not match any</span><br><span class="line">error:failed to push some refs to &quot;*******&quot;</span><br><span class="line">FATAL &#123;</span><br><span class="line">err:Error:Spawn failed</span><br><span class="line">.......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>②解决方案</strong>：在文件浏览器中勾选显示隐藏的项目，进入我们的博客目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\Blog_Hexo\Blog\.deploy_git\.git</span><br></pre></td></tr></table></figure><p>找到config文件，添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">email = 3086786161@qq.com</span><br><span class="line">name = HeartLoveLife</span><br><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = false</span><br><span class="line">bare = false</span><br><span class="line">logallrefupdates = true</span><br><span class="line">symlinks = false</span><br><span class="line">ignorecase = true</span><br><span class="line">[branch &quot;main&quot;]</span><br><span class="line">remote = https://github.com/HeartLoveLife/HeartLoveLife.github.io.git</span><br><span class="line">merge = refs/heads/main</span><br></pre></td></tr></table></figure><h3 id="👀问题四，hexo-s出现警告"><a href="#👀问题四，hexo-s出现警告" class="headerlink" title="👀问题四，hexo s出现警告"></a>👀问题四，<code>hexo s</code>出现警告</h3><p><strong>①问题描述</strong>：<code>Accessing non-existent property &#39;*&#39; of module exports inside circular dependency</code></p><figure class="highlight plaintext"><figcaption><span>bash</span></figcaption><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br><span class="line">(node:60224) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:60224) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:60224) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class="line">(node:60224) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(node:60224) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:60224) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br></pre></td></tr></table></figure><p><strong>②解决方案</strong>：出现警告，是因为<code>node</code>版本太高，切换成低版本的<code>node</code>来安装<code>Hexo</code>就可以了</p><h2 id="⛄Hexo更换主题"><a href="#⛄Hexo更换主题" class="headerlink" title="⛄Hexo更换主题"></a>⛄Hexo更换主题</h2><p>在博客的项目文件夹下打开<code>git bash</code>执行命令，以<code>hexo-theme-butterfly</code>主题为例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>运行成功之后，在项目文件夹<code>source</code>中可以查看到新的主题<code>themes</code>文件夹：<code>butterfly</code></p><p>在博客的项目文件夹下，修改<code>_config.yml</code>配置文件如下:</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># theme: landscape  默认主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>此时主题还不能正常配置使用，需要安装<code>pug</code> 以及<code>stylus</code> 的渲染器:</p><figure class="highlight plaintext"><figcaption><span>bash</span></figcaption><table><tr><td class="code"><pre><span class="line"># npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>执行<code>hexo s</code>部署到本地运行</p><figure class="highlight plaintext"><figcaption><span>bash</span></figcaption><table><tr><td class="code"><pre><span class="line"># 清除缓存b.json 和已生成的静态文件 public</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态页面到默认设置的 public 文件夹</span><br><span class="line">hexo g</span><br><span class="line"># 启动本地服务器，用于预览</span><br><span class="line">hexo s</span><br><span class="line"># 自动生成网站静态文件，并部署到设定的仓库或上传部署至服务端</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>默认地址：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客Blog框架简介</title>
      <link href="/2022/05/12/Blog/"/>
      <url>/2022/05/12/Blog/</url>
      
        <content type="html"><![CDATA[<p>简言之，<a href="https://baike.baidu.com/item/%E5%8D%9A%E5%AE%A2/124?fromtitle=blog&fromid=70149&fr=aladdin">Blog</a>就是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，再集丰富多彩的个性化展示于一体的综合性平台。</p><h2 id="⛄博客搭建的方式"><a href="#⛄博客搭建的方式" class="headerlink" title="⛄博客搭建的方式"></a>⛄博客搭建的方式</h2><p>总体来说，Blog搭建的方式可以分为静态博客和动态博客。顾名思义，静态博客：博文内容是通过文档（如：.md文件等）记录的（一个独立的文件），通过生成工具编译成最终的<code>hml</code>、<code>css</code>、<code>js</code>等静态文件，然后部署在静态Server服务器上或<code>Web托管</code>至数据<code>仓库</code>（如：<code>Github</code>），即可在互联网中被访问，不需要数据库的支撑。动态博客：是以数据库技术为基础，其博文内容是通过数据库记录存储的，主要特点体现在<code>交互性</code>；<code>动</code>不是指网页中的页面元素或特效在动，而是与后台数据库进行交互和数据传递（如：注册登录、评论、用户管理等）。</p><p>常见的博客框架：</p><h3 id="👀静态框架"><a href="#👀静态框架" class="headerlink" title="👀静态框架"></a>👀静态框架</h3><ul><li><p>Hexo (<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a>)</p></li><li><p>Hugo (<a href="https://www.gohugo.cn/">https://www.gohugo.cn/</a>)</p></li><li><p>VuePress (<a href="https://www.vuepress.cn/">https://www.vuepress.cn/</a>)</p></li><li><p>Jekyll (<a href="https://www.jekyll.com.cn/">https://www.jekyll.com.cn/</a>)</p></li></ul><h3 id="👀动态框架"><a href="#👀动态框架" class="headerlink" title="👀动态框架"></a>👀动态框架</h3><ul><li><p>WordPress  (<a href="https://wordpress.org/">https://wordpress.org/</a>)</p></li><li><p>Typecho (<a href="https://typecho.org/">https://typecho.org/</a>)</p></li><li><p>Halo (<a href="https://halo.run/">https://halo.run/</a>)</p></li><li><p>Solo (<a href="https://b3log.org/solo/">https://b3log.org/solo/</a>)</p></li></ul><h2 id="⛄框架简介"><a href="#⛄框架简介" class="headerlink" title="⛄框架简介"></a>⛄框架简介</h2><h3 id="👀Hexo"><a href="#👀Hexo" class="headerlink" title="👀Hexo"></a>👀Hexo</h3><p><code>Hexo</code> 是一个基于<code>Node.js</code>的快速、简洁且高效的静态博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo具有丰富的主题、插件系统。</p><p><strong>优点：</strong></p><ul><li>纯静态博客，部署简单、成本低廉、运行优化非常高效。</li><li>Hexo 静态博客框架可以在云端，也可以在本地电脑上甚至手机上。</li><li>Hexo 框架的博客网站没有网站后台，不存在后台安全漏洞的问题。</li><li>因为是纯静态的，几乎所有的 CDN 服务都可以完美的加速提升浏览速度。</li><li>搜索引擎对纯静态网站有天然的青睐度，收录、权重优先权明显。</li><li>纯静态网站会让网络攻击成本大大的增加也就是说纯静态网站被攻击的可能性更低了。</li></ul><h3 id="👀Hugo"><a href="#👀Hugo" class="headerlink" title="👀Hugo"></a>👀Hugo</h3><p><code>Hugo</code> 被称为是世界上最快的构建网站的框架。Hugo 是一个快速且现代的静态网站生成器，采用 Go 编程语言开发，Hugo 的设计目标是让创建网站重新变得有趣。Hugo 是一个通用的网站框架。从技术上讲，Hugo 是一个<a href="https://www.gohugo.cn/about/benefits/">静态站点生成器</a>。与动态构建页面的系统不同，Hugo 在创建或更新内容时构建页面。由于网站的浏览频率远高于编辑频率，因此 Hugo 旨在为您的网站最终用户提供最佳的浏览体验，并为网站作者提供理想的写作体验。使用 Hugo 构建的网站非常快速和安全。Hugo 构建的网站可以托管在任何地方，包括 <a href="https://netlify.com/">Netlify</a>、<a href="https://www.heroku.com/">Heroku</a>、<a href="https://www.godaddy.com/">GoDaddy</a>、<a href="https://www.dreamhost.com/">DreamHost</a>、<a href="https://pages.github.com/">GitHub Pages</a>、<a href="https://about.gitlab.com/features/pages/">GitLab Pages</a>、<a href="https://surge.sh/">Surge</a>、<a href="https://www.aerobatic.com/">Aerobatic</a>、<a href="https://firebase.google.com/docs/hosting/">Firebase</a>、<a href="https://cloud.google.com/storage/">Google Cloud Storage</a>、<a href="https://aws.amazon.com/s3/">Amazon S3</a>、<a href="https://www.rackspace.com/cloud/files">Rackspace</a>、<a href="https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-static-website">Azure</a>, 和 <a href="https://aws.amazon.com/cloudfront/">CloudFront</a>，并且与 CDN 更配。Hugo 网站在运行时不需要数据库或依赖于诸如 Ruby、Python 或 PHP 等昂贵的运行时环境。我们认为 Hugo 是一个理想的网站创建工具，具有几乎即时的构建时间，能够在网站修改时即刻重建。</p><p><strong>优点：</strong></p><ul><li>飞快的构建速度。在等待网站构建时有多无聊？Hugo 是同类中最快的工具。每个页面的构建时间小于一毫秒时，网站的平均构建时间不到一秒钟。</li><li>健壮的内容管理。灵活性为王。Hugo 是内容战略家的梦想。Hugo 支持无限的内容类型、分类、菜单、动态 API 驱动的内容等，所有这些都无需插件。</li><li>短代码(shortcodes)。Hugo 短代增强了 Markdown 的能力。我们喜欢 Markdown 语法的漂亮、简洁，但有时我们需要更多的灵活性。Hugo 短代码满足了美观和灵活的需求。</li><li>内置模板。Hugo 提供的通用模式让您的工作迅速完成。Hugo 提供了预制的模板，可以快速完成 SEO、评论、统计和其他功能。一行代码，完成所有工作。</li><li>支持多语言和 i18n。原生支持多语言。Hugo 为多语言站点提供了完整的 i18n 支持，并且与 Hugo 用户喜欢的单语言站点的开发体验完全相同。</li><li>定制输出。HTML 够吗？Hugo 允许以多种格式输出您的内容，包括 JSON 或 AMP，并使您可以轻松创建自己的内容。</li></ul><h3 id="👀VuePress"><a href="#👀VuePress" class="headerlink" title="👀VuePress"></a>👀VuePress</h3><p><code>VuePress</code> 由两部分组成：第一部分是一个<a href="https://github.com/vuejs/vuepress/tree/master/packages/%40vuepress/core">极简静态网站生成器 (opens new window)</a>，它包含由 Vue 驱动的<a href="https://www.vuepress.cn/theme/">主题系统</a>和<a href="https://www.vuepress.cn/plugin/">插件 API</a>，另一个部分是为书写技术文档而优化的<a href="https://www.vuepress.cn/theme/default-theme-config.html">默认主题</a>，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p><p>事实上，一个 VuePress 网站是一个由 <a href="http://vuejs.org/">Vue (opens new window)</a>、<a href="https://github.com/vuejs/vue-router">Vue Router (opens new window)</a>和 <a href="http://webpack.js.org/">webpack (opens new window)</a>驱动的单页应用。如果你以前使用过 Vue 的话，当你在开发一个自定义主题的时候，你会感受到非常熟悉的开发体验，你甚至可以使用 Vue DevTools 去调试你的自定义主题。在构建时，我们会为应用创建一个服务端渲染（SSR）的版本，然后通过虚拟访问每一条路径来渲染对应的HTML。这种做法的灵感来源于 <a href="https://nuxtjs.org/">Nuxt (opens new window)</a>的 <code>nuxt generate</code> 命令，以及其他的一些项目，比如 <a href="https://www.gatsbyjs.org/">Gatsby (opens new window)</a>。</p><p><strong>优点：</strong></p><ul><li>简洁至上。以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。</li><li>Vue 驱动。享受 Vue + webpack 的开发体验，可以在 Markdown 中使用 Vue 组件，又可以使用 Vue 来开发自定义主题。</li><li>高性能。VuePress 会为每个页面预渲染生成静态的 HTML，同时，每个页面被加载的时候，将作为 SPA 运行。</li></ul><h3 id="👀Jekyll"><a href="#👀Jekyll" class="headerlink" title="👀Jekyll"></a>👀Jekyll</h3><p><code>Jekyll</code> 是一个静态网站生成器。用你喜欢的标记语言书写内容并交给 Jekyll 处理，它将利用模板为你创建一个静态网站。你可以调整你想要的网址样式、在网站上显示哪些数据等等。jekyll是一个简单的免费的Blog生成工具，类似WordPress。但是和WordPress又有很大的不同，原因是jekyll只是一个生成静态网页的工具，不需要<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728">数据库</a>支持。但是可以配合第三方服务,例如Disqus。最关键的是jekyll可以免费部署在Github上，而且可以绑定自己的域名。</p><p><strong>优点：</strong></p><ul><li>简单。无需数据库、评论功能或频繁的版本更新—只需关注<em>你的内容</em>。</li><li>静态。只用 <a href="https://daringfireball.net/projects/markdown/">Markdown</a>、<a href="https://github.com/Shopify/liquid/wiki">Liquid</a>、HTML &amp; CSS g就可以构建可部署的静态网站。</li><li>博客。原生支持自定义链接、分类、静态页、文章以及自定义布局。</li></ul><h3 id="👀WordPress"><a href="#👀WordPress" class="headerlink" title="👀WordPress"></a>👀WordPress</h3><p><code>WordPress</code>是一款能让您建立出色网站、博客或应用程序的开源软件。WordPress是使用<a href="https://baike.baidu.com/item/PHP/9337">PHP</a>语言开发的博客平台，用户可以在支持PHP和MySQL数据库的<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571">服务器</a>上架设属于自己的网站。也可以把 WordPress当作一个<a href="https://baike.baidu.com/item/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/2683135">内容管理系统</a>（CMS）来使用。WordPress是一款<a href="https://baike.baidu.com/item/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5466014">个人博客</a>系统，并逐步演化成一款内容管理系统软件，它是使用PHP语言和<a href="https://baike.baidu.com/item/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/10991669">MySQL数据库</a>开发的，用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。WordPress有许多第三方开发的免费模板，安装方式简单易用。不过要做一个自己的模板，则需要你有一定的专业知识。比如你至少要懂的<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073">标准通用标记语言</a>下的一个应用<a href="https://baike.baidu.com/item/HTML">HTML</a>、<a href="https://baike.baidu.com/item/CSS/5457">CSS</a>、PHP等相关知识。</p><p><strong>优点：</strong></p><ul><li>WordPress 功能强大、扩展性强、生态丰富，这主要得益于其插件众多，易于扩充功能，基本上一个完整网站该有的功能，通过其第三方插件都能实现所有功能。</li><li>wordpress搭建的博客对seo搜索引擎友好，收录也快，排名靠前。</li><li>适合DIY，如果你是喜欢丰富内容的网站，那么wordpress可以很好地符合你的胃口。</li><li>主题很多，网站上一大片都是wordpress的主题，各色各样，应有尽有！</li><li>wordpress备份和网站转移比较方便，原站点使用站内工具导出后，使用WordPress Importer插件就能方便地将内容导入新网站。</li><li>wordpress有强大的社区支持，有上千万的开发者贡献和审查wordpress，所以wordpress是安全并且活跃的。</li></ul><h3 id="👀Typecho"><a href="#👀Typecho" class="headerlink" title="👀Typecho"></a>👀Typecho</h3><p><code>Typecho</code>是由type和echo两个词合成的，来自于开发团队的头脑风暴。Typecho基于PHP5开发，支持多种数据库，是一款内核强健﹑扩展方便﹑体验友好﹑运行流畅的轻量级开源博客程序。选用Typecho，搭建独一无二个人<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%97%A5%E5%BF%97/87941">网络日志</a>发布平台，享受创作的快乐。</p><p><strong>优点：</strong></p><ul><li>轻量高效。仅仅 7 张数据表，加上不足 400KB 的代码，就实现了完整的插件与模板机制。超低的 CPU 和内存使用率，足以发挥主机的最高性能。</li><li>先进稳定。原生支持 Markdown 排版语法，易读更易写。支持 BAE&#x2F;GAE&#x2F;SAE 等各类云主机，即使面对突如其来的高访问量，也能轻松应对。</li><li>简洁友好。精心打磨过的操作界面，依然是你熟悉的面孔，更多了一份成熟与贴心。每一个像素的剪裁，都只为离完美更进一步。</li></ul><h3 id="👀Halo"><a href="#👀Halo" class="headerlink" title="👀Halo"></a>👀Halo</h3><p><code>Halo</code>是一款基于<code>Java</code>语言，使用<a href="https://baike.baidu.com/item/Spring%20Boot/20249767?fr=aladdin">Spring Boot</a>框架开发的博客系统，致力于打造最好的 Java 博客系统，且只想安安静静的做一个博客系统。</p><p><strong>优点：</strong></p><ul><li>代码开源。我们的所有代码开源在 <a href="https://github.com/halo-dev">GitHub</a> 上且处于积极维护状态，截止目前已经发布了 <a href="https://github.com/halo-dev/halo/releases">81</a> 个版本。您也可以在上面提交您的问题或者参与代码贡献。</li><li>易于部署。采用了程序与用户配置分离的方式，迁移和备份成本大大降低。您只需要一条命令即可运行成功，同时也支持 Docker 部署。</li><li>REST API。提供了完善的 <a href="https://api.halo.run/content-api.html">Content API</a> 和 <a href="https://api.halo.run/admin-api.html">Admin API</a>，你可以用于开发单页面模板，微信小程序，各种系统的插件等。</li><li>模板系统完善的模板系统，支持自定义配置，支持在线安装和更新。开发主题也十分方便，欢迎大家参与主题的开发。</li><li>附件系统。支持本地上传，阿里云 OSS&#x2F;又拍云 OSS&#x2F;七牛云 OSS&#x2F;SM.MS 等云存储，你可以更方便的管理你文章中的附件。</li><li>评论系统拥有独立的评论插件，使用 Vue 开发，只需在页面引入构建好的 JS 文件即可，完美地和主题相结合。目前已有多款评论组件，你可以非常方便的切换。</li></ul><h3 id="👀Solo"><a href="#👀Solo" class="headerlink" title="👀Solo"></a>👀Solo</h3><p><code>Solo</code> 是一款基于Java语言有后台管理的，小而美的博客系统，专为程序员设计</p><p><strong>优点：</strong></p><ul><li>Markdown 编辑器支持三种编辑模式：所见即所得 &#x2F; 即时渲染 &#x2F; 分屏预览。</li><li><a href="https://ld246.com/article/1498490209748">Hexo &#x2F; Jekyll &#x2F; Markdown 导入</a>。</li><li>SQL &#x2F; JSON &#x2F; Markdown 导出。</li><li>拉取 GitHub 仓库和自动备份。</li><li>内置 HTTPS+CDN 文件存储。</li><li>支持生成导出静态站点，用于发布 GitHub Pages。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/07/hello-world/"/>
      <url>/2022/05/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
